# libs
import matplotlib.pyplot as plt
import numpy as np
from scipy import special
from mypkg.Iteration1D import Iteration1D
from sympy import *

# functions
#def compute_order

# Problem 1:
Ti = 20
Ts = -15
alpha = 0.138e-6
tol = 1e-12
Nmax = 1000

# Part A:
t = 60 * 86400 #seconds in 60 days
u = 2*np.sqrt(alpha*t)
f = lambda x: special.erf(x/u) - 3/7
fp = lambda x: (2/np.pi)*np.exp(-(x/u)**2)

xvec = np.linspace(0,1,num=100)
fval = f(xvec)

plt.plot(xvec,fval)
plt.axhline(y = 0, color = 'r')
plt.xlabel('x')
plt.ylabel('f(x)')
#plt.show()

# Part B:
find = Iteration1D(f,'bisection')
find.a = 0
find.b = 1
find.tol = tol
find.Nmax = Nmax

find.root()
root = find.pstar
print("Root from bisection method (problem 1b) is ",root)

# Part C:
find = Iteration1D(f,'newton')
find.f = f
find.fp = fp
find.p0 = 0.01
find.tol = tol
find.Nmax = Nmax

find.root()
root = find.pstar
print("Root with Newton's from initial guess,", find.p0, "is",root)

# Starting with x_initial = x_bar
find.p0 = 1
find.root()
